#!/bin/bash

# 🔄 Session End Script
# Automates the essential tasks for ending a development session

echo "🏁 Ending School Finder Development Session..."
echo "=============================================="

# Get session info
CURRENT_BRANCH=$(git branch --show-current)
CURRENT_DATE=$(date +"%Y-%m-%d %H:%M")

echo "📅 Session Date: $CURRENT_DATE"
echo "🌿 Current Branch: $CURRENT_BRANCH"
echo ""

# 1. Check for uncommitted changes
echo "🔍 Checking for uncommitted changes..."
if [[ -n $(git status --porcelain) ]]; then
    echo "📝 Uncommitted changes found:"
    git status --short
    echo ""
    
    # Ask if user wants to commit
    read -p "💾 Do you want to commit these changes? (y/n): " -n 1 -r
    echo ""
    
    if [[ $REPLY =~ ^[Yy]$ ]]; then
        echo "📝 Enter commit message (or press Enter for default):"
        read -r COMMIT_MSG
        
        if [[ -z "$COMMIT_MSG" ]]; then
            COMMIT_MSG="Session update: $(date +"%Y-%m-%d %H:%M")"
        fi
        
        echo "💾 Committing changes..."
        git add .
        git commit -m "$COMMIT_MSG"
        
        # Ask about pushing
        read -p "🚀 Push to origin/$CURRENT_BRANCH? (y/n): " -n 1 -r
        echo ""
        
        if [[ $REPLY =~ ^[Yy]$ ]]; then
            git push origin "$CURRENT_BRANCH"
            echo "✅ Changes pushed to origin/$CURRENT_BRANCH"
        else
            echo "⚠️  Changes committed locally but not pushed"
        fi
    else
        echo "⚠️  Changes left uncommitted"
    fi
else
    echo "✅ No uncommitted changes"
fi
echo ""

# 2. Session summary
echo "📊 SESSION SUMMARY"
echo "=================="

# Count files changed in this session (approximate)
CHANGED_FILES=$(git diff --name-only HEAD~1 2>/dev/null | wc -l | tr -d ' ')
if [[ "$CHANGED_FILES" -gt 0 ]]; then
    echo "📝 Files modified: $CHANGED_FILES"
    echo "📋 Recent changes:"
    git diff --name-only HEAD~1 2>/dev/null | head -10
else
    echo "📝 No recent file changes detected"
fi
echo ""

# 3. Check build status
echo "🔨 Final build check..."
if npm run build > /dev/null 2>&1; then
    echo "✅ Build successful - project ready for next session"
else
    echo "❌ Build failed - needs attention in next session"
fi
echo ""

# 4. Generate session notes template
SESSION_NOTES_FILE="docs/session-notes-$(date +"%Y%m%d-%H%M").md"

cat > "$SESSION_NOTES_FILE" << EOF
# Session Notes - $CURRENT_DATE

## Session Info
- **Date**: $CURRENT_DATE
- **Branch**: $CURRENT_BRANCH
- **Duration**: [Add duration]

## Goals for This Session
- [ ] [Add goals that were planned]

## Completed Tasks
- ✅ [Add completed tasks]

## Issues Encountered
- [Add any issues and their resolutions]

## Next Session Priorities
- [ ] [Add tasks for next session]

## Notes
- [Add any additional notes or observations]

---
*Auto-generated by session-end.sh*
EOF

echo "📝 Session notes template created: $SESSION_NOTES_FILE"
echo ""

# 5. Update handover documentation
echo "📚 Updating handover documentation..."
HANDOVER_FILE="docs/HANDOVER_SESSIONS.md"

if [[ -f "$HANDOVER_FILE" ]]; then
    # Add session entry to handover file
    echo "" >> "$HANDOVER_FILE"
    echo "### 📅 Session $CURRENT_DATE" >> "$HANDOVER_FILE"
    echo "**Branch**: $CURRENT_BRANCH" >> "$HANDOVER_FILE"
    echo "**Status**: Session completed" >> "$HANDOVER_FILE"
    echo "**Notes**: [Update with session details]" >> "$HANDOVER_FILE"
    echo "" >> "$HANDOVER_FILE"
    
    echo "✅ Handover documentation updated"
else
    echo "⚠️  Handover documentation not found"
fi

# 6. Final checklist
echo ""
echo "📋 SESSION END CHECKLIST"
echo "========================"
echo "✅ Uncommitted changes handled"
echo "✅ Build status verified"
echo "✅ Session notes created"
echo "✅ Handover documentation updated"
echo ""

# 7. Next session reminders
echo "🎯 NEXT SESSION REMINDERS"
echo "========================="
echo "1. Run: ./scripts/session-start.sh"
echo "2. Review: $SESSION_NOTES_FILE"
echo "3. Check: docs/HANDOVER_SESSIONS.md"
echo "4. Continue from: $CURRENT_BRANCH branch"
echo ""

echo "🎉 Session ended successfully!"
echo "📚 Don't forget to review the session notes and update priorities"
echo ""